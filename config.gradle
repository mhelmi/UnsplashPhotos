/**
 * Created by Muhammad Helmi on 04/11/20.
 * E-m.helmi@lean.sa
 *
 * This file will holds all project dependencies version to prevent any versions
 * conflicts also to make it easier to break project into small components
 * by sharing dependencies through all modules.
 */

ext {
  // Top level versions
  compile_sdk_version = 30
  build_tool_version = "30.0.2"

  gradle_version = '7.0.2'
  kotlin_version = "1.5.31"
  safe_args_version = "2.3.5"
  hilt_version = "2.37"

  // androidCore versions
  def appcompat = "1.3.0-rc01"
  def recyclerview = "1.2.1"
  def activity_ktx = "1.3.0-beta02"
  def fragment_ktx = "1.3.5"
  def constraint_layout = "2.0.4"
  def material = "1.4.0-rc01"
  def core_ktx = "1.6.0-rc01"

  // kotlin_coroutines versions
  def kotlin_coroutines = "1.5.0"

  // lifecycle versions
  def lifecycle_version = "2.3.1"

  //navigation component versions
  def nav_version = "2.3.5"

  //room database versions
  def room_version = "2.3.0"

  //retrofit versions
  def retrofit_version = "2.9.0"
  def okHttp_logging_interceptor_version = "4.9.1"
  def gson = "2.8.7"

  // Hilt versions
  def hilt_jetpack_support = "1.0.0"

  // third party libraries versions
  def timber = "4.7.1"
  def glide = "4.12.0"
  def palette = "1.0.0"

  // testing versions
  def junit = "4.13.2"
  def junit_android_test = "1.1.2"
  def espresso_core = "3.3.0"
  def mockito = "3.8.0"
  def mockitoKotlin = "4.0.0"
  def coroutinesTest = "1.4.2"
  def coreTesting = "2.1.0"

  androidCore = [
    "androidx.appcompat:appcompat:$appcompat",
    "androidx.recyclerview:recyclerview:$recyclerview",
    "androidx.core:core-ktx:$core_ktx",
    "androidx.activity:activity-ktx:$activity_ktx",
    "androidx.fragment:fragment-ktx:$fragment_ktx",
    "androidx.constraintlayout:constraintlayout:$constraint_layout",
    "com.google.android.material:material:$material",
  ]

  kotlinLib = [
    "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  ]

  kotlinCoroutines = [
    "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines",
    "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"
  ]

  lifecycle = [
    "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
    "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
    "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
    "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version",
    "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
    "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
  ]

  androidCoreGroup = [
    androidCore,
    kotlinLib,
    kotlinCoroutines,
    lifecycle
  ]

  navigation = [
    "androidx.navigation:navigation-fragment-ktx:$nav_version",
    "androidx.navigation:navigation-ui-ktx:$nav_version",
    "androidx.navigation:navigation-fragment-ktx:$nav_version",
    "androidx.navigation:navigation-ui-ktx:$nav_version"
  ]

  room = [
    "androidx.room:room-runtime:$room_version",
    "androidx.room:room-ktx:$room_version"
  ]

  roomKapt = [
    "androidx.room:room-compiler:$room_version"
  ]

  retrofit = [
    "com.squareup.retrofit2:retrofit:$retrofit_version",
    "com.squareup.retrofit2:converter-gson:$retrofit_version",
    "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",
    "com.squareup.okhttp3:logging-interceptor:$okHttp_logging_interceptor_version",
  ]

  gson = [
    "com.google.code.gson:gson:$gson"
  ]

  networking = [
    retrofit,
    gson
  ]

  hiltLib = [
    "com.google.dagger:hilt-android:$hilt_version",
    "androidx.hilt:hilt-navigation-fragment:$hilt_jetpack_support"
  ]

  hiltKapt = [
    "com.google.dagger:hilt-compiler:$hilt_version",
    "androidx.hilt:hilt-compiler:$hilt_jetpack_support"
  ]

  thirdParty = [
    "com.jakewharton.timber:timber:$timber",
    "com.github.bumptech.glide:glide:$glide",
    "androidx.palette:palette:$palette",
  ]

  annotationProcessorGroup = [
  ]

  kaptGroup = [
    hiltKapt,
    roomKapt
  ]

  testImplementationGroup = [
    "junit:junit:$junit",
    "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTest",
    "androidx.arch.core:core-testing:$coreTesting",
    "org.mockito:mockito-core:$mockito",
    "org.mockito:mockito-inline:$mockito",
    "org.mockito.kotlin:mockito-kotlin:$mockitoKotlin",
  ]

  androidTestImplementationGroup = [
    "androidx.test.ext:junit:$junit_android_test",
    "androidx.test.espresso:espresso-core:$espresso_core",
    "org.mockito:mockito-android:$mockito",
  ]
}